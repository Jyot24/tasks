<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Post Details</title>
    <style>
        table,
        tr,
        td {
            border: 1px solid beige;
        }

        .card {
            box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2);
            transition: 0.3s;
        }

        .card:hover {
            box-shadow: 0 8px 16px 0 rgba(0, 0, 0, 0.2);
        }

        .container {
            padding: 2px 16px;
        }

        table {
            font-size: auto;


        }

        tr {
            background-color: aqua;
        }

        button {
            margin: 10px;
        }

        #showComments> div{
            background-color: rgb(209, 219, 15);
            margin: 20px;
        }
    </style>
</head>

<body onload="myFunction(<%=id%>)">

    <a href="/user/profile/" tabindex="5">Home</a>
    <div class="card">
        <div class="container">
            <h4>Post Details</h4>
            <div id="setContent">

            </div>
            <button onclick="showComments(<%=id%>)" id="button-comment">
                Show Comments
            </button>
            <div id="showComments"></div>
        </div>
    </div>


</body>
<script>
    let app_url = '<%= process.env.APP_URL %>';
    let object = {}
    document.getElementById('showComments').style.display = "none"
    async function myFunction(post_id) {
        let object_post = await fetch_details(`comments?postId=/${post_id}`);
        setContent(object_post)

    }

    async function fetch_details(url) {
        // return new Promise((resolve, reject) => {

        return await fetch(`${app_url}${url}`)
            .then(response => {
                if (!response.ok) {
                    // throw new Error('Network response was not ok');
                    reject('Network response was not ok')
                }
                return response.json();
            })
            .then(users => {
                // resolve(users)
                return users
            })
            .catch(error => {
                ////console.error('There was a problem with the fetch operation:', error);
            });
        // })

    }


    function setContent(users) {
        const propertynames = Object.keys(users);


        let temp_html = "<table><tr>"
        propertynames.map((key) => {

            temp_html += `<tr><th>${key}</th>`
            if (key == "image" || key == "thumbnail") {
                temp_html += `<td><img src="${users[key]}" alt="" srcset="" width="300px" height="100px"></td></tr>`

            } else {
                temp_html += `<td>${users[key]}</td></tr>`
            }

        })


        temp_html += "</tr></table>"
        // ////console.log("temp_html:" + temp_html);
        document.getElementById('setContent').innerHTML = temp_html
    }

    async function showComments(id) {
        let object_comments = await fetch_details(`comments/`);

        let final_object_comment = object_comments.filter((value) => {
            return value.postId == id
        })

        ////console.log("final_object_comment:" + final_object_comment);
        if (final_object_comment == "") {
            if (document.getElementById('showComments').style.display == "") {
                document.getElementById('showComments').style.display = "none"
            } else {
                document.getElementById('showComments').style.display = ""
            }
            document.getElementById('showComments').innerHTML = "not any comment present"
            return;
        }


        let temp_html_comment = ""

        final_object_comment.map((value_comment) => {
            temp_html_comment += `<div>${value_comment.comment}</div>`
        })
        document.getElementById('showComments').innerHTML = temp_html_comment

        if (document.getElementById('showComments').style.display == "") {
            document.getElementById('showComments').style.display = "none"
        } else {
            document.getElementById('showComments').style.display = ""
        }


        // document.getElementById('showComments').innerHTML = object_comments.comment




    }
</script>

</html>